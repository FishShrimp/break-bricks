{"version":3,"sources":["assets\\scripts\\controller\\GameCtl.js"],"names":["GameModel","require","cc","Class","Component","properties","gameView","ball","paddle","brickLayout","overPanel","onLoad","physicsManager","director","getPhysicsManager","gameModel","startGame","enabled","init","bricksNumber","stopGame","show","score","onBallContactBrick","ballNode","brickNode","parent","addScore","minusBrick","updateScore","onBallContactGround","groundNode","onDestroy"],"mappings":";;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEL,OAAO,CAAC,UAAD,CADT;AAERM,IAAAA,IAAI,EAAEN,OAAO,CAAC,MAAD,CAFL;AAGRO,IAAAA,MAAM,EAAEP,OAAO,CAAC,QAAD,CAHP;AAIRQ,IAAAA,WAAW,EAAER,OAAO,CAAC,aAAD,CAJZ;AAKRS,IAAAA,SAAS,EAAET,OAAO,CAAC,WAAD;AALV,GAHP;AAWL;AACAU,EAAAA,MAAM,EAAE,kBAAY;AAChB,SAAKC,cAAL,GAAsBV,EAAE,CAACW,QAAH,CAAYC,iBAAZ,EAAtB;AACA,SAAKC,SAAL,GAAiB,IAAIf,SAAJ,EAAjB;AACA,SAAKgB,SAAL;AACH,GAhBI;AAmBLA,EAAAA,SAnBK,uBAmBO;AACR,SAAKJ,cAAL,CAAoBK,OAApB,GAA8B,IAA9B;AACA,SAAKF,SAAL,CAAeG,IAAf;AACA,SAAKZ,QAAL,CAAcY,IAAd,CAAmB,IAAnB;AACA,SAAKX,IAAL,CAAUW,IAAV,CAAe,IAAf;AACA,SAAKV,MAAL,CAAYU,IAAZ;AACA,SAAKT,WAAL,CAAiBS,IAAjB,CAAsB,KAAKH,SAAL,CAAeI,YAArC;AACA,SAAKT,SAAL,CAAeQ,IAAf,CAAoB,IAApB;AACH,GA3BI;AA6BLE,EAAAA,QA7BK,sBA6BM;AACP,SAAKR,cAAL,CAAoBK,OAApB,GAA8B,KAA9B;AACA,SAAKP,SAAL,CAAeW,IAAf,CAAoB,KAAKN,SAAL,CAAeO,KAAnC,EAA0C,KAAKP,SAAL,CAAeI,YAAf,KAAgC,CAA1E;AACH,GAhCI;AAkCLI,EAAAA,kBAlCK,8BAkCcC,QAlCd,EAkCwBC,SAlCxB,EAkCmC;AACpCA,IAAAA,SAAS,CAACC,MAAV,GAAmB,IAAnB;AACA,SAAKX,SAAL,CAAeY,QAAf,CAAwB,CAAxB;AACA,SAAKZ,SAAL,CAAea,UAAf,CAA0B,CAA1B;AACA,SAAKtB,QAAL,CAAcuB,WAAd,CAA0B,KAAKd,SAAL,CAAeO,KAAzC;;AACA,QAAI,KAAKP,SAAL,CAAeI,YAAf,IAA+B,CAAnC,EAAsC;AAClC,WAAKC,QAAL;AACH;AACJ,GA1CI;AA4CLU,EAAAA,mBA5CK,+BA4CeN,QA5Cf,EA4CyBO,UA5CzB,EA4CqC;AACtC,SAAKX,QAAL;AACH,GA9CI;AAgDLY,EAAAA,SAhDK,uBAgDO;AACR,SAAKpB,cAAL,CAAoBK,OAApB,GAA8B,KAA9B;AACH;AAlDI,CAAT","sourceRoot":"/","sourcesContent":["const GameModel = require('GameModel');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        gameView: require('GameView'),\r\n        ball: require('Ball'),\r\n        paddle: require('Paddle'),\r\n        brickLayout: require('BrickLayout'),\r\n        overPanel: require('OverPanel'),\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.physicsManager = cc.director.getPhysicsManager();\r\n        this.gameModel = new GameModel();\r\n        this.startGame();\r\n    },\r\n\r\n\r\n    startGame() {\r\n        this.physicsManager.enabled = true;\r\n        this.gameModel.init();\r\n        this.gameView.init(this);\r\n        this.ball.init(this);\r\n        this.paddle.init();\r\n        this.brickLayout.init(this.gameModel.bricksNumber);\r\n        this.overPanel.init(this);\r\n    },\r\n\r\n    stopGame() {\r\n        this.physicsManager.enabled = false;\r\n        this.overPanel.show(this.gameModel.score, this.gameModel.bricksNumber === 0);\r\n    },\r\n\r\n    onBallContactBrick(ballNode, brickNode) {\r\n        brickNode.parent = null;\r\n        this.gameModel.addScore(1);\r\n        this.gameModel.minusBrick(1);\r\n        this.gameView.updateScore(this.gameModel.score);\r\n        if (this.gameModel.bricksNumber <= 0) {\r\n            this.stopGame();\r\n        }\r\n    },\r\n\r\n    onBallContactGround(ballNode, groundNode) {\r\n        this.stopGame();\r\n    },\r\n\r\n    onDestroy() {\r\n        this.physicsManager.enabled = false;\r\n    }\r\n\r\n});"]}